What:		/sys/class/intel_pmt/
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		The intel_pmt/ class directory contains information for
		devices that expose hardware telemetry using Intel Platform
		Monitoring Technology (PMT)

What:		/sys/class/intel_pmt/.../guid
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The GUID for this device. The GUID identifies the
		version of the XML file for the parent device that should
		be used to determine the register layout.

What:		/sys/class/intel_pmt/.../size
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The length of the result buffer in bytes that corresponds
		to the size for the crashlog/sample/telem device.

What:		/sys/class/intel_pmt/.../offset
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The offset of the buffer in bytes that corresponds
		to the mapping for the crashlog/sample/telem device.

What:		/sys/class/intel_pmt/telem<x>
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		The telem<x> directory contains files describing an instance of
		a PMT telemetry device that exposes hardware telemetry. Each
		telem<x> directory has an associated telem file. This file
		may be opened and mapped or read to access the telemetry space
		of the device. The register layout of the telemetry space is
		determined from an XML file that matches the PCI device id and
		GUID for the device.

What:		/sys/class/intel_pmt/telem<x>/telem
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The telemetry data for this telemetry device. This file
		may be mapped or read to obtain the data.

What:		/sys/class/intel_pmt/crashlog<x>
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		The crashlog<x> directory contains files for configuring an
		instance of a PMT crashlog device that can perform crash data
		recording. Each crashlog<x> device has an associated crashlog
		file. This file can be opened and mapped or read to access the
		resulting crashlog buffer. The register layout for the buffer
		can be determined from an XML file of specified GUID for the
		parent device.

What:		/sys/class/intel_pmt/crashlog<x>/crashlog
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The crashlog buffer for this crashlog device. This file
		may be mapped or read to obtain the data.

What:		/sys/class/intel_pmt/crashlog<x>/enable
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The GUID for this crashlog device. The GUID identifies the
		version of the XML file for the parent device that should be
		used to determine the register layout.

What:		/sys/class/intel_pmt/crashlog<x>/trigger
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) Boolean value controlling the triggering of the crashlog
		device node. When read it provides data on if the crashlog has
		been triggered. When written to it can be used to either clear
		the current trigger by writing false, or to trigger a new
		event if the trigger is not currently set.

What:		/sys/class/intel_pmt/sample<x>
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		The sample<x> directory contains files for configuring an
		instance of a PMT watcher device that can perform hardware
		sampling. Each sample<x> device has an associated sample file.
		This file can be opened and mapped to access the resulting
		sample data. The registers to be sampled are determined from
		an XML file of specified GUID for the parent device. Programs
		use this XML file to determine which registers to sample by
		selecting the corresponding bit in the "vector" file.

What:		/sys/class/intel_pmt/sample<x>/sample
Date:		October 2020
KernelVersion:	5.10
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The sample buffer for this sampler device. This file
		may be mapped or read to obtain the data.

What:		/sys/class/intel_pmt/trace<x>
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		The trace<x> directory contains files for configuring an
		instance of a PMT watcher device that can perform hardware
		tracing. File operations cannot be performed on it. The
		resulting trace data is placed in the destination specified
		by the "destination" file. The registers to be traced are
		determined from an XML file of specified GUID for the parent
		device. Programs use this XML file to determine which registers
		to sample by selecting the corresponding bit in the vector file.

What:		/sys/class/intel_pmt/trace<x>/destination
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) The storage destination for the trace data. This value is
		not writable when mode is 'Disabled'.

What:		/sys/class/cta_watcher/trace<x>/stream_uid
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) The unique stream ID for the trace data. This value is
		not writable when mode is 'Disabled'. If the tracer does not
		support stream UID the value will be set to -1.

What:		/sys/class/intel_pmt/trace<x>/token
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) 8 bit Token value.

What:		/sys/class/intel_pmt/sample<x>/enable_id_limit
What:		/sys/class/intel_pmt/trace<x>/enable_id_limit
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) This value represents the upper limit on ID values that
		can be accepted by the sampler or tracer.

What:		/sys/class/intel_pmt/sample<x>/enable_list
What:		/sys/class/intel_pmt/trace<x>/enable_list
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) Comma separated list representing the selected metrics to
		be sampled or traced. Sample IDs are matched to registers based
		on the XML file. Each ID represents a 64 bit register to sample.
		This file is only writable when mode is set to 'Disabled'

What:		/sys/class/intel_pmt/sample<x>/enable_vector
What:		/sys/class/intel_pmt/trace<x>/enable_vector
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) Bitmask representing the selected metrics to be sampled or
		traced. Programs correlate the register to be sampled with the
		bit position by using the XML file. Each bit represents a 64 bit
		register to sample. This file is only writable when mode is set
		to 'Disabled'

What:		/sys/class/intel_pmt/sample<x>/mode
What:		/sys/class/intel_pmt/trace<x>/mode
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) The operating mode of the sampler/tracer. Modes are one
		of the following:

			disabled:	Not operational
			oneshot:	One sample or trace
			periodic:	Periodic sampling or tracing

		mode select works as follows:

		Selecting a non 'disabled' mode will automatically start the
		sample/trace according to the options selected in the other
		configuration files (period_us, vector, destination, and token,
		as applicable). This files will also become read only until
		mode is set back to 'disabled'.

		Transitions

			Current		Next
			-------		----
			disabled	Any
			oneshot		disabled
			periodic	disabled

What:		/sys/class/intel_pmt/sample<x>/period_us
What:		/sys/class/intel_pmt/trace<x>/period_us
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RW) The sampling/tracing period in microseconds. Applicable
		to 'periodic' mode only. This file is only writable when mode
		is set to 'Disabled'.

What:		/sys/class/intel_pmt/sample<x>/select_limit
What:		/sys/class/intel_pmt/trace<x>/select_limit
Date:		October 2020
KernelVersion:	5.8
Contact:	David Box <david.e.box@linux.intel.com>
Description:
		(RO) The maximum number of select bits that can be enabled
		in the vector file.
